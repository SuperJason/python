//
// Reference:
// http://cn.voidcc.com/question/p-nbrlxzhd-kp.html
//
#include <iostream> 
#include <string> 

using namespace std; 

#define CRC32_POLYNOMIAL 0xEDB88320L 

unsigned long CRC32Value(int i) 
{ 
    int j; 
    unsigned long ulCRC; 
    ulCRC = i; 
    for (j = 8; j > 0; j--) 
    { 
        if (ulCRC & 1) 
            ulCRC = (ulCRC >> 1)^CRC32_POLYNOMIAL; 
        else 
            ulCRC >>= 1; 
    } 
    return ulCRC; 
} 

unsigned long CalculateBlockCRC32( unsigned long ulCount, unsigned char *ucBuffer) 
{ 
    unsigned long ulTemp1; 
    unsigned long ulTemp2; 
    unsigned long ulCRC = 0; 
    while (ulCount-- != 0) { 
        ulTemp1 = (ulCRC >> 8) & 0x00FFFFFFL; 
        ulTemp2 = CRC32Value(((int)ulCRC^*ucBuffer++) & 0xff); 
        ulCRC = ulTemp1^ulTemp2; 
    } 
    return(ulCRC); 
} 

int main() 
{ 
#if 0
    unsigned char buffer[] = { 
        0xaa, 0x44, 0x12, 0x1c, 0x2a, 0x00, 0x02, 0x20, 0x48, 0x00, 0x00, 0x00, 0x90,
        0xb4, 0x93, 0x05, 0xb0, 0xab, 0xb9, 0x12, 0x00, 0x00, 0x00, 0x00, 0x45, 0x61,
        0xbc, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1b, 0x04, 0x50,
        0xb3, 0xf2, 0x8e, 0x49, 0x40, 0x16, 0xfa, 0x6b, 0xbe, 0x7c, 0x82, 0x5c, 0xc0,
        0x00, 0x60, 0x76, 0x9f, 0x44, 0x9f, 0x90, 0x40, 0xa6, 0x2a, 0x82, 0xc1, 0x3d,
        0x00, 0x00, 0x00, 0x12, 0x5a, 0xcb, 0x3f, 0xcd, 0x9e, 0x98, 0x3f, 0xdb, 0x66,
        0x40, 0x40, 0x00, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x0b, 0x0b, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03
    }; 
#else
    unsigned char buffer[] = { 
        0x0a, 0x0b, 0x0c, 0x0d
    };
#endif

    unsigned long crc = CalculateBlockCRC32(sizeof(buffer), buffer); 
    cout << "data\'s crc32: 0x" << hex << crc << endl; 
} 
